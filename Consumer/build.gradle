plugins {
    id 'java'
    id "application"
    id 'com.github.johnrengelman.shadow'
}

group 'boot-bootcamp'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

application {
    mainClassName = "Consumer.MainClass"
}

ext {
    jettyVersion = '9.4.6.v20170531'
    jerseyVersion = '2.29'
}

shadowJar {
    manifest {
        attributes 'Main-Class': "$mainClassName"
    }

    transform(com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer)
}
dependencies {

    testCompile group: 'junit', name: 'junit', version: '4.12'

    compile group: 'com.google.code.gson', name: 'gson', version: '2.7'
    compile "com.googlecode.json-simple:json-simple:1.1.1"

    compile "org.apache.kafka:kafka-clients:0.11.0.0"

    compile group: 'org.elasticsearch.client', name: 'elasticsearch-rest-high-level-client', version: '6.8.5'

    compile 'com.google.inject:guice:4.0'
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'org.slf4j:slf4j-simple:1.6.4'

    compile 'org.apache.logging.log4j:log4j-core:2.9.0'
    compile group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.0'


    compile "org.glassfish.jersey.core:jersey-server:${jerseyVersion}"
    compile "org.glassfish.jersey.containers:jersey-container-servlet-core:${jerseyVersion}"
    compile "org.glassfish.jersey.containers:jersey-container-jetty-http:${jerseyVersion}"
    compile "org.glassfish.jersey.media:jersey-media-json-jackson:${jerseyVersion}"
    compile "org.glassfish.jersey.inject:jersey-hk2:${jerseyVersion}"
    compile "org.glassfish.jersey.bundles.repackaged:jersey-guava:2.6"
    compile "org.glassfish.jersey.media:jersey-media-moxy:2.25"

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.1'

    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'

    //compile group: 'org.glassfish.jersey.core', name: 'jersey-client', version: '2.29'
    compile project(':infarstructure:')

}
