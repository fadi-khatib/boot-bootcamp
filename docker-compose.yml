version: '3'
services:

  db:
    image: mysql:5.6
    restart: always
    ports:
      - "3306:3306"
      - "33060:33060"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    networks:
      - kafkastreams-network
    volumes:
      - ./infarstructure/db/init.sql:/docker-entrypoint-initdb.d/init.sql




  haproxy:
    image: haproxy:latest
    volumes:
      - './haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg'
    ports:
      - "${PORT}:${PORT}"
    environment:
      - REPLICAS=${REPLICAS}
      - PORT=${PORT}
    networks:
      - kafkastreams-network


  accounts-service:
    build: ./accounts-service
    ports:
      - "8083:8083"
    networks:
      - kafkastreams-network


  server:
    build: ./LogsHandler
    deploy:
      replicas: ${REPLICAS}
    networks:
      - kafkastreams-network

  zookeeper:
    image: wurstmeister/zookeeper
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafkastreams-network

  kafka:
    image: wurstmeister/kafka
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"

    networks:
      - kafkastreams-network

  consumer:
    build: ./Consumer
    depends_on:
      - zookeeper
    networks:
      - kafkastreams-network


  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.6.0
    hostname: elastic
    ports:
      - "9200:9200"
      - "9210:9210"
      - "9300:9300"
    networks:
      - kafkastreams-network


volumes:
  my-db:

networks:
  kafkastreams-network:
