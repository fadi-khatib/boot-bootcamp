docker volume prune


# how to send logs manualy to local: ֿ
$ cd gaia-hermes-ws
$ gaia-restart   # backend
$ sudo yarn serve #front end
# go to http://localhost:9000/#/dashboard/data-sources/
$ curl -T ~/logs/services.log http://localhost:8021/file_upload/ShHHmJTWQDHljEMXWQIRJizdmWHqHUwf/log #upload log file 	to local
#in cas esome thing went wrong you may use:
$ docker stop $(docker ps -a -q)
$ yarn install:base


# how to send logs using the this app to local:
$ cd gaia-hermes-ws
$$ yarn install:base #in case some thing wrong use this
$ gaia-restart   # backend
$ sudo yarn serve #front end
$ ./gradlew build
$ docker build . -t my-app -f Dockerfile
$ docker run -p 8081:8081 my-app
$ ./gradlew build
$ docker-compose up
$ curl -T ~/logs/services.log http://localhost:8021/file_upload/FJXduSkqbXFOVroBLRmgSoxUXMpYJyhe/log #upload log file 	to local

/*
$ docker build -t awesome .
$ docker swarm init
$ docker stack deploy --compose-file=docker-compose.yml prod
*/


$ ./gradlew build
$ docker build -t fadi/bootcamp .
$ docker-compose up --scale bootcamp=3
$ docker-compose down


docker run -p 8080:8080 fadi/bootcamp

$ docker image prune --all

/////////////elastic search
docker pull docker.elastic.co/elasticsearch/elasticsearch:7.4.2
curl -X GET "localhost:9200/_cat/nodes?v&pretty"

docker run -p 9200:9200 -p 9300:9300 -e "discovery.type=single-node" docker.elastic.co/elasticsearch/elasticsearch:7.4.2

sudo lsof -i:8080

docker-machine ssh elastic
$ docker network inspect bridge
docker network ls


docker network create example
docker run -d --net example --name elastic1 -p 9200:9200 -p 9300:9300 -e "discovery.type=single-node" docker.elastic.co/elasticsearch/elasticsearch:7.4.2
./gradlew build
docker build -t fadi .
docker run -d --net example --name container2 fadi


docker-compose --compatibility up --build


docker exec -it  peaceful_hertz sh
docker inspect -f '{{.State.Pid}}' ac01bb6541db


sudo nsenter -t $(docker inspect -f '{{.State.Pid}}' ac01bb6541db) -n netstat

docker run -d --name zookeeper --publish 2181:2181 zookeeper:3.4

my ip 192.168.1.91
 mkdir -p kafka-ex/{data,logs} && cd kafka-ex

///////////////////////////////////////////////////////////////////////////
///////////////////////////////////  kafka     ///////////////////////////
$ docker run -d --name zookeeper --publish 2181:2181 zookeeper:3.4

$ docker pull ches/kafka
—kafka image: ches/kafka
$ mkdir -p kafka-ex/{data,logs} && cd kafka-ex
$ docker run -d \
 --hostname localhost \
 --name kafka \
 --volume /Users/fadikhatib/Documents/Bootcamp/Exercises/boot-bootcamp-gradle/data:/data --volume /Users/fadikhatib/Documents/Bootcamp/Exercises/boot-bootcamp-gradle/logs:/logs \
 --publish 9092:9092 --publish 7203:7203 \
 --env KAFKA_ADVERTISED_HOST_NAME=192.168.1.91 --env ZOOKEEPER_IP=192.168.1.91 \
 ches/kafka

- Create topic inside runing kafka:
$ docker exec kafka \ > kafka-topics.sh --create --topic my-topic --replication-factor 1 --partitions 1 --zookeeper 192.168.1.91:2181